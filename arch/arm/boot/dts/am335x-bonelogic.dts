/*
 * Bonelogic R1
 *
 *
 *     Big fAt reminders: 
 *			1. Use tables in AM335 datasheet, ~pg 30 to determine GPIO modes
 *			2. goofy hex numbers in pinctrl-single blocks are register offsets.  See: https://github.com/jadonk/bonescript/blob/64732854d4c296de8792d5d4c49639ae5f5ecede/src/bone.js
 *			3. Duplicate labels errors are triggered when the the node address (@XXXXX) matches an entry in the .dtsi but isn't otherwise identical.  Even the *case* of the hex characters to define the address matters here (!?)
 *			4. GPIO mapping hell?  RTFM!  (Documentation\devicetree\bindings\gpio\gpio-omap.txt)
 * 			5. Arghhhhh... "THEY" said linux GPIOs are different than pin GPIOs.  BUT they're not, at least not in SDK7.  The ti,hwmods deal in the dtsi fixes this.
 *			
 */

/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/pwm/pwm.h>

/ {
	model = "ProtoLogic Norse LCD";
	compatible = "ti,am335x-bonelogic", "ti,am33xx";


        cpus {
                cpu@0 {
                        cpu0-supply = <&dcdc2_reg>;
                };
        };

	memory {
		device_type = "memory";
		reg = <0x80000000 0x08000000>; /* 128 MB */
	};

	am33xx_pinmux: pinmux@44e10800 
	{
		pinctrl-names = "default";
		pinctrl-0 = <&clkout2_pin &clkout1_pin>;

		lcd_pins_default: lcd_pins_default {
			pinctrl-single,pins = <
				0x20 0x01	/* gpmc_ad8.lcd_data16, OUTPUT | MODE1 */
				0x24 0x01	/* gpmc_ad9.lcd_data17, OUTPUT | MODE1 */
				0x28 0x01	/* gpmc_ad10.lcd_data18, OUTPUT | MODE1 */
				0x2c 0x01	/* gpmc_ad11.lcd_data19, OUTPUT | MODE1 */
				0x30 0x01	/* gpmc_ad12.lcd_data20, OUTPUT | MODE1 */
				0x34 0x01	/* gpmc_ad13.lcd_data21, OUTPUT | MODE1 */
				0x38 0x01	/* gpmc_ad14.lcd_data22, OUTPUT | MODE1 */
				0x3c 0x01	/* gpmc_ad15.lcd_data23, OUTPUT | MODE1 */
				0xa0 0x00	/* lcd_data0.lcd_data0, OUTPUT | MODE0 */
				0xa4 0x00	/* lcd_data1.lcd_data1, OUTPUT | MODE0 */
				0xa8 0x00	/* lcd_data2.lcd_data2, OUTPUT | MODE0 */
				0xac 0x00	/* lcd_data3.lcd_data3, OUTPUT | MODE0 */
				0xb0 0x00	/* lcd_data4.lcd_data4, OUTPUT | MODE0 */
				0xb4 0x00	/* lcd_data5.lcd_data5, OUTPUT | MODE0 */
				0xb8 0x00	/* lcd_data6.lcd_data6, OUTPUT | MODE0 */
				0xbc 0x00	/* lcd_data7.lcd_data7, OUTPUT | MODE0 */
				0xc0 0x00	/* lcd_data8.lcd_data8, OUTPUT | MODE0 */
				0xc4 0x00	/* lcd_data9.lcd_data9, OUTPUT | MODE0 */
				0xc8 0x00	/* lcd_data10.lcd_data10, OUTPUT | MODE0 */
				0xcc 0x00	/* lcd_data11.lcd_data11, OUTPUT | MODE0 */
				0xd0 0x00	/* lcd_data12.lcd_data12, OUTPUT | MODE0 */
				0xd4 0x00	/* lcd_data13.lcd_data13, OUTPUT | MODE0 */
				0xd8 0x00	/* lcd_data14.lcd_data14, OUTPUT | MODE0 */
				0xdc 0x00	/* lcd_data15.lcd_data15, OUTPUT | MODE0 */
				0xe0 0x00	/* lcd_vsync.lcd_vsync, OUTPUT | MODE0 */
				0xe4 0x00	/* lcd_hsync.lcd_hsync, OUTPUT | MODE0 */
				0xe8 0x00	/* lcd_pclk.lcd_pclk, OUTPUT | MODE0 */
 				0xec 0x00	/* lcd_ac_bias_en.lcd_ac_bias_en, OUTPUT | MODE0 */
			>;
		};

		pwm_bl_pins: pinmux_pwm_bl_pins 
		{
			pinctrl-single,pins = <
				0x48 0x06 /* gpmc_a2.ehrpwm1a, OUTPUT | MODE6 */
			>;
		};

		gpio_pins: pinmux_gpio_pins 
		{
			pinctrl-single,pins = <
				0x48 0x07 /* gpmc_a2.ehrpwm1a (gpio1_18), LCD Backlight enable, OUTPUT | MODE7 */
				0x60 0x07 /* gpmc_a8.gpio1_24, PSoC reset, OUTPUT | MODE7 */
			>;
		};

		lcd_pins_sleep: lcd_pins_sleep {
			pinctrl-single,pins = <
				0x20 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad8.lcd_data16 */
				0x24 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad9.lcd_data17 */
				0x28 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad10.lcd_data18 */
				0x2c (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad11.lcd_data19 */
				0x30 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad12.lcd_data20 */
				0x34 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad13.lcd_data21 */
				0x38 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad14.lcd_data22 */
				0x3c (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_ad15.lcd_data23 */
				0xa0 (PULL_DISABLE | MUX_MODE7)		/* lcd_data0.lcd_data0 */
				0xa4 (PULL_DISABLE | MUX_MODE7)		/* lcd_data1.lcd_data1 */
				0xa8 (PULL_DISABLE | MUX_MODE7)		/* lcd_data2.lcd_data2 */
				0xac (PULL_DISABLE | MUX_MODE7)		/* lcd_data3.lcd_data3 */
				0xb0 (PULL_DISABLE | MUX_MODE7)		/* lcd_data4.lcd_data4 */
				0xb4 (PULL_DISABLE | MUX_MODE7)		/* lcd_data5.lcd_data5 */
				0xb8 (PULL_DISABLE | MUX_MODE7)		/* lcd_data6.lcd_data6 */
				0xbc (PULL_DISABLE | MUX_MODE7)		/* lcd_data7.lcd_data7 */
				0xc0 (PULL_DISABLE | MUX_MODE7)		/* lcd_data8.lcd_data8 */
				0xc4 (PULL_DISABLE | MUX_MODE7)		/* lcd_data9.lcd_data9 */
				0xc8 (PULL_DISABLE | MUX_MODE7)		/* lcd_data10.lcd_data10 */
				0xcc (PULL_DISABLE | MUX_MODE7)		/* lcd_data11.lcd_data11 */
				0xd0 (PULL_DISABLE | MUX_MODE7)		/* lcd_data12.lcd_data12 */
				0xd4 (PULL_DISABLE | MUX_MODE7)		/* lcd_data13.lcd_data13 */
				0xd8 (PULL_DISABLE | MUX_MODE7)		/* lcd_data14.lcd_data14 */
				0xdc (PULL_DISABLE | MUX_MODE7)		/* lcd_data15.lcd_data15 */
				0xe0 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_vsync.lcd_vsync, OUTPUT | MODE0 */
				0xe4 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_hsync.lcd_hsync */
				0xe8 (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_pclk.lcd_pclk */
				0xec (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_ac_bias_en.lcd_ac_bias_en */
			>;
		};


		i2c0_pins: pinmux_i2c0_pins {
			pinctrl-single,pins = <
				0x188 (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda */
				0x18c (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl */
			>;
		};

		i2c2_pins: pinmux_i2c2_pins {
			pinctrl-single,pins = <
				0x178 (PIN_INPUT_PULLUP | MUX_MODE3)	/* i2c2_sda */
				0x17c (PIN_INPUT_PULLUP | MUX_MODE3)	/* i2c2_scl */
			>;
		};

		uart0_pins: pinmux_uart0_pins {
			pinctrl-single,pins = <
				0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
				0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)		/* uart0_txd.uart0_txd */
			>;
		};

		dcan1_pins: pinmux_dcan1_pins {
			pinctrl-single,pins = <
				0x180 0x12  /* d_can1_tx, SLEWCTRL_FAST | INPUT_PULLUP | MODE2 */
				0x184 0x32  /* d_can1_rx, SLEWCTRL_FAST | RECV_ENABLE | INPUT_PULLUP | MODE2 */
			>;
		};

	        spi0_pins: pinmux_spi0_pins {
        	        pinctrl-single,pins = <
                	        0x150 (PIN_INPUT_PULLUP | MUX_MODE0)    /* spi0_clk.spi0_clk */
                        	0x154 (PIN_INPUT_PULLUP | MUX_MODE0)    /* spi0_d0.spi0_d0 */
	                        0x158 (PIN_INPUT_PULLUP | MUX_MODE0)    /* spi0_d1.spi0_d1 */
        	                0x15c (PIN_INPUT_PULLUP | MUX_MODE0)    /* spi0_cs0.spi0_cs0 */
	                >;
        	};
	        spi1_pins: pinmux_spi1_pins {
        	        pinctrl-single,pins = <
                	        0x190 (PIN_INPUT_PULLUP | MUX_MODE3)    /* gpio3_14-17 */
                        	0x194 (PIN_INPUT_PULLUP | MUX_MODE3)    
	                        0x198 (PIN_INPUT_PULLUP | MUX_MODE3)    
        	                0x19c (PIN_INPUT_PULLUP | MUX_MODE3)    
                	>;
	        };

		
		clkout1_pin: pinmux_clkout1_pin {
			pinctrl-single,pins = <
				0x1b0 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)		/* xdma_event_intr0.clkout1 */
			>;
		};

		clkout2_pin: pinmux_clkout2_pin {
			pinctrl-single,pins = <
				0x1b4 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)		/* xdma_event_intr1.clkout2 */
			>;
		};


                mmc1_pins_default: pinmux_mmc1_pins {
                        pinctrl-single,pins = <
                                0x0F0 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat3.mmc0_dat3 */
                                0x0F4 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat2.mmc0_dat2 */
                                0x0F8 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat1.mmc0_dat1 */
                                0x0FC (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat0.mmc0_dat0 */
                                0x100 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_clk.mmc0_clk */
                                0x104 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_cmd.mmc0_cmd */
				0x160 (PIN_INPUT | MUX_MODE7)           /* spi0_cs1.gpio0_6 */
                        >;
                };
   };//pins

   /* "On Chip Peripherals".... in case you were wondering. */
   ocp 
   {
	uart0: serial@44e09000 {
		pinctrl-names = "default";
		pinctrl-0 = <&uart0_pins>;
		status = "okay";
	};

        spi0: spi@48030000 {
                pinctrl-names = "default";
                pinctrl-0 = <&spi0_pins>;
                status = "okay";
                m25p80@0 {
                        compatible = "mx25l12805d";
                        spi-max-frequency = <24000000>;
                        reg = <0x0>;
               		#address-cells = <1>;
               		#size-cells = <1>;
			wholechip@0
			{
                  		label = "enchilda";
                  		reg = <0 0x1000000>;
			};
			partition@0 {
                  		label = "MLO";
                  		reg = <0 0x20000>;
               		};
			partition@0x20000 {
                  		label = "uboot";
                  		reg = <0x20000 0x80000>;
               		};
			partition@0xA0000 {
                  		label = "dtb";
                  		reg = <0xA0000 0x10000>;
               		};
			partition@0xB0000 {
                  		label = "initrd";
                  		reg = <0xB0000 0x100000>;
               		};
			partition@0x1B0000 {
                  		label = "zimage";
                  		reg = <0x1B0000 0x300000>;
               		};
			partition@0x4B0000 {
                  		label = "rootfs";
                  		reg = <0x4B0000 0xB50000>;
               		};
                };
        };
        spi1: spi@481a0000 {
                pinctrl-names = "default";
                pinctrl-0 = <&spi1_pins>;
                status = "okay";
                m25p80@0 {
                        compatible = "s25fl512s";
                        spi-max-frequency = <24000000>;
                        reg = <0x0>;
               		#address-cells = <1>;
               		#size-cells = <1>;
			partition@0 {
                  		label = "usrfs";
                  		reg = <0 0x4000000>;
               		};
                };
        };

	i2c0: i2c@44e0b000 {
		pinctrl-names = "default";
		pinctrl-0 = <&i2c0_pins>;
		status = "okay";
		clock-frequency = <400000>;

		/* Set OPP50 (0.95V) for VDD core */
		sleep-sequence = /bits/ 8 <
			0x02 0x2d 0x25 0x1f /* Set VDD2 to 0.95V */
		>;
		/* Set OPP100 (1.10V) for VDD core */
		wake-sequence = /bits/ 8 <
			0x02 0x2d 0x25 0x2b /* Set VDD2 to 1.1V */
		>;
		tps: tps@24 {
			reg = <0x24>;
		};

	};

	i2c2: i2c@4819c000 {
		pinctrl-names = "default";
		pinctrl-0 = <&i2c2_pins>;
		status = "okay";
		clock-frequency = <100000>;
	};


	musb: usb@47400000 {
		status = "okay";
		control@44e10000 {
			status = "okay";
		};

		usb-phy@47401300 {
			status = "okay";
		};

		usb-phy@47401b00 {
			status = "okay";
		};

		usb@47401000 {
			status = "okay";
		};

		usb@47401800 {
			status = "okay";
			dr_mode = "host";
		};

		dma-controller@07402000  {
			status = "okay";
		};
	};


	lcdc: lcdc@0x4830e000 {
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&lcd_pins_default>;
		pinctrl-1 = <&lcd_pins_sleep>;
		status = "okay";
		display-timings 
		{
			240x400 {
				hactive         = <240>;
				vactive         = <400>;
				hback-porch     = <8>;
				hfront-porch    = <8>;
				hsync-len       = <8>;
				vback-porch     = <8>;
				vfront-porch    = <8>;
				vsync-len       = <8>;
				clock-frequency = <8000000>;
				hsync-active    = <0>;
				vsync-active    = <0>;
			};
		};
	};

	gpio
	{
        	compatible = "gpio-leds";
                pinctrl-names = "default";
                pinctrl-0 = <&gpio_pins>;
		lcd_backlight
		{
			label="lcdbacklight";
			gpios = <&gpio1 18 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
		psoc_reset
		{
			label="psocreset";
			gpios = <&gpio1 24 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
	};

/*
	backlight {
		compatible = "pwm-backlight";
		pinctrl-names = "default";
		pinctrl-0 = <&pwm_bl_pins>;
		pwms = <&ehrpwm1 0 500000 0>;	
		pwm-names = "LCD4";
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100>;
		default-brightness-level = <101>;
		status = "okay";
	};
*/

        vmmcsd_fixed: fixedregulator@0 {
                compatible = "regulator-fixed";
                regulator-name = "vmmcsd_fixed";
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
	};

   }; //OCP
};

&dcan1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dcan1_pins>;
};

&wkup_m3 {
	ti,needs-vtt-toggle;
	ti,vtt-gpio-pin = <7>;
};


&gpio0 {
	ti,no-reset;
};


/* https://kernel.googlesource.com/pub/scm/linux/kernel/git/tmlind/linux-omap/+/718ae1cd66fb054cb32e2c6851bc71b99f2f6d2c/arch/arm/boot/dts/omap3-gta04.dts*/
/* http://www.signal11.us/oss/elce2012/beaglebone_mrf24j40_hacks.diff */
/*
&i2c2 {
	psoctouch_intr@5 { 
		compatible = "psoc,psoctouch_poll";
		reg = <0x13>;
        	interrupt-parent = <&gpio1>;
        	interrupts = <21 2>;
        	gpios = <&gpio1 21 GPIO_ACTIVE_LOW>;
		ti,poll-period = <10>; //mS
	};

};
*/

/*
&epwmss1 {
	status = "okay";
};

&ehrpwm1 {
	status = "okay";
};
*/

/include/ "tps65217.dtsi"

&tps {
        regulators {
                dcdc1_reg: regulator@0 {
                        regulator-always-on;
                };

                dcdc2_reg: regulator@1 {
                        /* VDD_MPU voltage limits 0.95V - 1.325V with +/-4% tol*/
                        regulator-name = "vdd_mpu";
                        regulator-min-microvolt = <925000>;
                        regulator-max-microvolt = <1378000>;
                        regulator-boot-on;
                        regulator-always-on;
                };

                dcdc3_reg: regulator@2 {
                        /* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tole*/
                        regulator-name = "vdd_core";
                        regulator-min-microvolt = <925000>;
                        regulator-max-microvolt = <1150000>;
                        regulator-boot-on;
                        regulator-always-on;
                };
                ldo1_reg: regulator@3 {
                        regulator-always-on;
                };

                ldo2_reg: regulator@4 {
                        regulator-always-on;
                };

                ldo3_reg: regulator@5 {
                        regulator-always-on;
		        regulator-min-microvolt = <3300000>;
		        regulator-max-microvolt = <3300000>;
                };

                ldo4_reg: regulator@6 {
                        regulator-always-on;
		        regulator-min-microvolt = <3300000>;
		        regulator-max-microvolt = <3300000>;
                };
        };//regulators
};//tps

&mmc1 {
        status = "okay";
        bus-width = <4>;
        pinctrl-names = "default";
        pinctrl-0 = <&mmc1_pins_default>;
        cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
        cd-inverted;
	vmmc-supply = <&vmmcsd_fixed>;
};
